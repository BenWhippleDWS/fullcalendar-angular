{"hash":"f1748cdc85777f3c0773f18139abc18da26e211223a15771dc53a4c660e776cf","types":[{"exports":["FullCalendarComponent","FullCalendarModule"],"facadeModuleId":"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/fullcalendar-angular.d.ts","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/private-types.d.ts","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/full-calendar.component.d.ts","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/utils/offscreen-fragment.component.d.ts","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/utils/transport-container.component.d.ts","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/full-calendar.module.d.ts","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/fullcalendar-angular.d.ts"],"name":"fullcalendar-angular.d","type":"chunk","dynamicImports":[],"fileName":"index.d.ts","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["TemplateRef","AfterViewInit","DoCheck","AfterContentChecked","OnDestroy","ElementRef","ChangeDetectorRef","*","OnChanges","SimpleChanges"],"@fullcalendar/core":["CalendarOptions","Calendar"],"@fullcalendar/core/internal":["CustomRendering"],"@angular/common":["*"]},"imports":["@angular/core","@fullcalendar/core","@fullcalendar/core/internal","@angular/common"],"modules":{"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/private-types.d.ts":{"code":"type CalendarOption<OptionName> = OptionName extends keyof CalendarOptions ? CalendarOptions[OptionName] : never;\ntype CalendarTemplateRef<OptionName> = TemplateRef<{\n    $implicit: CalendarArgLookup<OptionName>;\n}>;\ntype CalendarArgLookup<OptionName> = OptionName extends keyof CalendarOptions ? FirstParam<CalendarOptions[OptionName]> : never;\ntype FirstParam<Func> = Func extends ((...args: any) => any) ? Parameters<Func>[0] : never;","originalLength":562,"removedExports":[],"renderedExports":["CalendarOption","CalendarTemplateRef"],"renderedLength":437},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/full-calendar.component.d.ts":{"code":"declare class FullCalendarComponent implements AfterViewInit, DoCheck, AfterContentChecked, OnDestroy {\n    private element;\n    options?: CalendarOptions;\n    deepChangeDetection?: boolean;\n    events?: CalendarOption<'events'> | null | undefined;\n    eventSources?: CalendarOption<'eventSources'> | null | undefined;\n    resources?: CalendarOption<'resources'> | null | undefined;\n    dayHeaderContent?: CalendarTemplateRef<'dayHeaderContent'>;\n    dayCellContent?: CalendarTemplateRef<'dayCellContent'>;\n    weekNumberContent?: CalendarTemplateRef<'weekNumberContent'>;\n    nowIndicatorContent?: CalendarTemplateRef<'nowIndicatorContent'>;\n    eventContent?: CalendarTemplateRef<'eventContent'>;\n    slotLaneContent?: CalendarTemplateRef<'slotLaneContent'>;\n    slotLabelContent?: CalendarTemplateRef<'slotLabelContent'>;\n    allDayContent?: CalendarTemplateRef<'allDayContent'>;\n    moreLinkContent?: CalendarTemplateRef<'moreLinkContent'>;\n    noEventsContent?: CalendarTemplateRef<'noEventsContent'>;\n    resourceAreaHeaderContent?: CalendarTemplateRef<'resourceAreaHeaderContent'>;\n    resourceGroupLabelContent?: CalendarTemplateRef<'resourceGroupLabelContent'>;\n    resourceLabelContent?: CalendarTemplateRef<'resourceLabelContent'>;\n    resourceLaneContent?: CalendarTemplateRef<'resourceLaneContent'>;\n    resourceGroupLaneContent?: CalendarTemplateRef<'resourceGroupLaneContent'>;\n    private calendar;\n    private optionSnapshot;\n    private handleCustomRendering;\n    private customRenderingMap;\n    private customRenderingArray?;\n    constructor(element: ElementRef, changeDetector: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    ngDoCheck(): void;\n    ngAfterContentChecked(): void;\n    ngOnDestroy(): void;\n    get customRenderings(): CustomRendering<any>[];\n    getApi(): Calendar;\n    private buildInputOptions;\n    private buildExtraOptions;\n    trackCustomRendering(index: number, customRendering: CustomRendering<any>): any;\n    static ɵfac: i0.ɵɵFactoryDeclaration<FullCalendarComponent, never>;\n    static ɵcmp: i0.ɵɵComponentDeclaration<FullCalendarComponent, \"full-calendar\", never, { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"deepChangeDetection\": { \"alias\": \"deepChangeDetection\"; \"required\": false; }; \"events\": { \"alias\": \"events\"; \"required\": false; }; \"eventSources\": { \"alias\": \"eventSources\"; \"required\": false; }; \"resources\": { \"alias\": \"resources\"; \"required\": false; }; }, {}, [\"dayHeaderContent\", \"dayCellContent\", \"weekNumberContent\", \"nowIndicatorContent\", \"eventContent\", \"slotLaneContent\", \"slotLabelContent\", \"allDayContent\", \"moreLinkContent\", \"noEventsContent\", \"resourceAreaHeaderContent\", \"resourceGroupLabelContent\", \"resourceLabelContent\", \"resourceLaneContent\", \"resourceGroupLaneContent\"], never, false, never>;\n}","originalLength":3147,"removedExports":[],"renderedExports":["FullCalendarComponent"],"renderedLength":2785},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/utils/offscreen-fragment.component.d.ts":{"code":"declare class OffscreenFragmentComponent implements AfterViewInit, OnDestroy {\n    private element;\n    constructor(element: ElementRef);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    static ɵfac: i0.ɵɵFactoryDeclaration<OffscreenFragmentComponent, never>;\n    static ɵcmp: i0.ɵɵComponentDeclaration<OffscreenFragmentComponent, \"offscreen-fragment\", never, {}, {}, never, [\"*\"], false, never>;\n}","originalLength":522,"removedExports":[],"renderedExports":["OffscreenFragmentComponent"],"renderedLength":407},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/utils/transport-container.component.d.ts":{"code":"declare class TransportContainerComponent implements OnChanges, AfterViewInit, OnDestroy {\n    inPlaceOf: HTMLElement;\n    reportEl: (el: HTMLElement | null) => void;\n    elTag: string;\n    elClasses?: string[];\n    elStyle?: Record<string, unknown>;\n    elAttrs?: Record<string, unknown>;\n    template: TemplateRef<any>;\n    renderProps?: any;\n    rootElRef?: ElementRef;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    static ɵfac: i0.ɵɵFactoryDeclaration<TransportContainerComponent, never>;\n    static ɵcmp: i0.ɵɵComponentDeclaration<TransportContainerComponent, \"transport-container\", never, { \"inPlaceOf\": { \"alias\": \"inPlaceOf\"; \"required\": false; }; \"reportEl\": { \"alias\": \"reportEl\"; \"required\": false; }; \"elTag\": { \"alias\": \"elTag\"; \"required\": false; }; \"elClasses\": { \"alias\": \"elClasses\"; \"required\": false; }; \"elStyle\": { \"alias\": \"elStyle\"; \"required\": false; }; \"elAttrs\": { \"alias\": \"elAttrs\"; \"required\": false; }; \"template\": { \"alias\": \"template\"; \"required\": false; }; \"renderProps\": { \"alias\": \"renderProps\"; \"required\": false; }; }, {}, never, never, false, never>;\n}","originalLength":1303,"removedExports":[],"renderedExports":["TransportContainerComponent"],"renderedLength":1149},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/full-calendar.module.d.ts":{"code":"declare class FullCalendarModule {\n    static ɵfac: i0.ɵɵFactoryDeclaration<FullCalendarModule, never>;\n    static ɵmod: i0.ɵɵNgModuleDeclaration<FullCalendarModule, [typeof FullCalendarComponent, typeof OffscreenFragmentComponent, typeof TransportContainerComponent], [typeof i4.CommonModule], [typeof FullCalendarComponent]>;\n    static ɵinj: i0.ɵɵInjectorDeclaration<FullCalendarModule>;\n}","originalLength":658,"removedExports":[],"renderedExports":["FullCalendarModule"],"renderedLength":392},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-typings/fullcalendar-angular.d.ts":{"code":null,"originalLength":126,"removedExports":[],"renderedExports":[],"renderedLength":0}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { TemplateRef, AfterViewInit, DoCheck, AfterContentChecked, OnDestroy, ElementRef, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { CalendarOptions, Calendar } from '@fullcalendar/core';\nimport { CustomRendering } from '@fullcalendar/core/internal';\nimport * as i4 from '@angular/common';\n\ntype CalendarOption<OptionName> = OptionName extends keyof CalendarOptions ? CalendarOptions[OptionName] : never;\ntype CalendarTemplateRef<OptionName> = TemplateRef<{\n    $implicit: CalendarArgLookup<OptionName>;\n}>;\ntype CalendarArgLookup<OptionName> = OptionName extends keyof CalendarOptions ? FirstParam<CalendarOptions[OptionName]> : never;\ntype FirstParam<Func> = Func extends ((...args: any) => any) ? Parameters<Func>[0] : never;\n\ndeclare class FullCalendarComponent implements AfterViewInit, DoCheck, AfterContentChecked, OnDestroy {\n    private element;\n    options?: CalendarOptions;\n    deepChangeDetection?: boolean;\n    events?: CalendarOption<'events'> | null | undefined;\n    eventSources?: CalendarOption<'eventSources'> | null | undefined;\n    resources?: CalendarOption<'resources'> | null | undefined;\n    dayHeaderContent?: CalendarTemplateRef<'dayHeaderContent'>;\n    dayCellContent?: CalendarTemplateRef<'dayCellContent'>;\n    weekNumberContent?: CalendarTemplateRef<'weekNumberContent'>;\n    nowIndicatorContent?: CalendarTemplateRef<'nowIndicatorContent'>;\n    eventContent?: CalendarTemplateRef<'eventContent'>;\n    slotLaneContent?: CalendarTemplateRef<'slotLaneContent'>;\n    slotLabelContent?: CalendarTemplateRef<'slotLabelContent'>;\n    allDayContent?: CalendarTemplateRef<'allDayContent'>;\n    moreLinkContent?: CalendarTemplateRef<'moreLinkContent'>;\n    noEventsContent?: CalendarTemplateRef<'noEventsContent'>;\n    resourceAreaHeaderContent?: CalendarTemplateRef<'resourceAreaHeaderContent'>;\n    resourceGroupLabelContent?: CalendarTemplateRef<'resourceGroupLabelContent'>;\n    resourceLabelContent?: CalendarTemplateRef<'resourceLabelContent'>;\n    resourceLaneContent?: CalendarTemplateRef<'resourceLaneContent'>;\n    resourceGroupLaneContent?: CalendarTemplateRef<'resourceGroupLaneContent'>;\n    private calendar;\n    private optionSnapshot;\n    private handleCustomRendering;\n    private customRenderingMap;\n    private customRenderingArray?;\n    constructor(element: ElementRef, changeDetector: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    ngDoCheck(): void;\n    ngAfterContentChecked(): void;\n    ngOnDestroy(): void;\n    get customRenderings(): CustomRendering<any>[];\n    getApi(): Calendar;\n    private buildInputOptions;\n    private buildExtraOptions;\n    trackCustomRendering(index: number, customRendering: CustomRendering<any>): any;\n    static ɵfac: i0.ɵɵFactoryDeclaration<FullCalendarComponent, never>;\n    static ɵcmp: i0.ɵɵComponentDeclaration<FullCalendarComponent, \"full-calendar\", never, { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"deepChangeDetection\": { \"alias\": \"deepChangeDetection\"; \"required\": false; }; \"events\": { \"alias\": \"events\"; \"required\": false; }; \"eventSources\": { \"alias\": \"eventSources\"; \"required\": false; }; \"resources\": { \"alias\": \"resources\"; \"required\": false; }; }, {}, [\"dayHeaderContent\", \"dayCellContent\", \"weekNumberContent\", \"nowIndicatorContent\", \"eventContent\", \"slotLaneContent\", \"slotLabelContent\", \"allDayContent\", \"moreLinkContent\", \"noEventsContent\", \"resourceAreaHeaderContent\", \"resourceGroupLabelContent\", \"resourceLabelContent\", \"resourceLaneContent\", \"resourceGroupLaneContent\"], never, false, never>;\n}\n\ndeclare class OffscreenFragmentComponent implements AfterViewInit, OnDestroy {\n    private element;\n    constructor(element: ElementRef);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    static ɵfac: i0.ɵɵFactoryDeclaration<OffscreenFragmentComponent, never>;\n    static ɵcmp: i0.ɵɵComponentDeclaration<OffscreenFragmentComponent, \"offscreen-fragment\", never, {}, {}, never, [\"*\"], false, never>;\n}\n\ndeclare class TransportContainerComponent implements OnChanges, AfterViewInit, OnDestroy {\n    inPlaceOf: HTMLElement;\n    reportEl: (el: HTMLElement | null) => void;\n    elTag: string;\n    elClasses?: string[];\n    elStyle?: Record<string, unknown>;\n    elAttrs?: Record<string, unknown>;\n    template: TemplateRef<any>;\n    renderProps?: any;\n    rootElRef?: ElementRef;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    static ɵfac: i0.ɵɵFactoryDeclaration<TransportContainerComponent, never>;\n    static ɵcmp: i0.ɵɵComponentDeclaration<TransportContainerComponent, \"transport-container\", never, { \"inPlaceOf\": { \"alias\": \"inPlaceOf\"; \"required\": false; }; \"reportEl\": { \"alias\": \"reportEl\"; \"required\": false; }; \"elTag\": { \"alias\": \"elTag\"; \"required\": false; }; \"elClasses\": { \"alias\": \"elClasses\"; \"required\": false; }; \"elStyle\": { \"alias\": \"elStyle\"; \"required\": false; }; \"elAttrs\": { \"alias\": \"elAttrs\"; \"required\": false; }; \"template\": { \"alias\": \"template\"; \"required\": false; }; \"renderProps\": { \"alias\": \"renderProps\"; \"required\": false; }; }, {}, never, never, false, never>;\n}\n\ndeclare class FullCalendarModule {\n    static ɵfac: i0.ɵɵFactoryDeclaration<FullCalendarModule, never>;\n    static ɵmod: i0.ɵɵNgModuleDeclaration<FullCalendarModule, [typeof FullCalendarComponent, typeof OffscreenFragmentComponent, typeof TransportContainerComponent], [typeof i4.CommonModule], [typeof FullCalendarComponent]>;\n    static ɵinj: i0.ɵɵInjectorDeclaration<FullCalendarModule>;\n}\n\nexport { FullCalendarComponent, FullCalendarModule };\n","map":null,"preliminaryFileName":"index.d.ts","sourcemapFileName":null}],"fesm2022":[{"exports":["FullCalendarComponent","FullCalendarModule"],"facadeModuleId":"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/fullcalendar-angular.js","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/options.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/obj.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/fast-deep-equal.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/offscreen-fragment.component.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/transport-container.component.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/full-calendar.component.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/full-calendar.module.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/public-api.js","/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/fullcalendar-angular.js"],"name":"fullcalendar-angular","type":"chunk","dynamicImports":[],"fileName":"fullcalendar-angular.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","ViewEncapsulation","Component","ViewChild","Input","ContentChild","NgModule"],"@fullcalendar/core":["Calendar"],"@fullcalendar/core/internal":["CustomRenderingStore"],"@angular/common":["*","CommonModule"]},"imports":["@angular/core","@fullcalendar/core","@fullcalendar/core/internal","@angular/common"],"modules":{"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/options.js":{"code":"const OPTION_IS_DEEP = {\n    headerToolbar: true,\n    footerToolbar: true,\n    events: true,\n    eventSources: true,\n    resources: true\n};\n/*\nNOTE: keep synced with component\n*/\nconst OPTION_INPUT_NAMES = [\n    'events',\n    'eventSources',\n    'resources',\n];","originalLength":311,"removedExports":[],"renderedExports":["OPTION_IS_DEEP","OPTION_INPUT_NAMES"],"renderedLength":261},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/obj.js":{"code":"const hasOwnProperty = Object.prototype.hasOwnProperty;\n/*\nReally simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.\nWanted to use a third-party lib, but none did exactly this.\n*/\nfunction deepCopy(input) {\n    if (Array.isArray(input)) {\n        return input.map(deepCopy);\n    }\n    else if (input instanceof Date) {\n        return new Date(input.valueOf());\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        return mapHash(input, deepCopy);\n    }\n    else { // everything else (null, function, etc)\n        return input;\n    }\n}\nfunction mapHash(input, func) {\n    const output = {};\n    for (const key in input) {\n        if (hasOwnProperty.call(input, key)) {\n            output[key] = func(input[key], key);\n        }\n    }\n    return output;\n}","originalLength":880,"removedExports":[],"renderedExports":["deepCopy","mapHash"],"renderedLength":834},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/fast-deep-equal.js":{"code":"/*\nForked from https://github.com/epoberezkin/fast-deep-equal (also has MIT license)\nNeeded ESM support or else Angular complains about treeshaking\n(https://github.com/fullcalendar/fullcalendar-angular/issues/421)\n*/\nfunction deepEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n        if (a.constructor !== b.constructor)\n            return false;\n        var length, i, keys;\n        if (Array.isArray(a)) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!deepEqual(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (a.constructor === RegExp)\n            return a.source === b.source && a.flags === b.flags;\n        if (a.valueOf !== Object.prototype.valueOf)\n            return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString)\n            return a.toString() === b.toString();\n        keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            var key = keys[i];\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    // true if both NaN, false otherwise\n    return a !== a && b !== b;\n}","originalLength":1610,"removedExports":[],"renderedExports":["deepEqual"],"renderedLength":1559},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/offscreen-fragment.component.js":{"code":"const dummyContainer$1 = typeof document !== 'undefined' ? document.createDocumentFragment() : null;\nclass OffscreenFragmentComponent {\n    element;\n    constructor(element) {\n        this.element = element;\n    }\n    ngAfterViewInit() {\n        if (dummyContainer$1) {\n            dummyContainer$1.appendChild(this.element.nativeElement);\n        }\n    }\n    // invoked BEFORE component removed from DOM\n    ngOnDestroy() {\n        if (dummyContainer$1) {\n            dummyContainer$1.removeChild(this.element.nativeElement);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: OffscreenFragmentComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.7\", type: OffscreenFragmentComponent, isStandalone: false, selector: \"offscreen-fragment\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: OffscreenFragmentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'offscreen-fragment',\n                    standalone: false,\n                    template: '<ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });","originalLength":1664,"removedExports":[],"renderedExports":["OffscreenFragmentComponent"],"renderedLength":1511},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/utils/transport-container.component.js":{"code":"const dummyContainer = typeof document !== 'undefined' ? document.createDocumentFragment() : null;\nclass TransportContainerComponent {\n    inPlaceOf; // required\n    reportEl; // required\n    elTag; // required\n    elClasses;\n    elStyle;\n    elAttrs;\n    template; // required\n    renderProps;\n    rootElRef;\n    ngAfterViewInit() {\n        const rootEl = this.rootElRef?.nativeElement; // assumed defined\n        replaceEl(rootEl, this.inPlaceOf);\n        applyElAttrs(rootEl, undefined, this.elAttrs);\n        // insurance for if Preact recreates and reroots inPlaceOf element\n        this.inPlaceOf.style.display = 'none';\n        this.reportEl(rootEl);\n    }\n    ngOnChanges(changes) {\n        const rootEl = this.rootElRef?.nativeElement;\n        // ngOnChanges is called before ngAfterViewInit (and before DOM initializes)\n        // so make sure rootEl is defined before doing anything\n        if (rootEl) {\n            // If the ContentContainer's tagName changed, it will create a new DOM element in its\n            // original place. Detect this and re-replace.\n            if (this.inPlaceOf.parentNode !== dummyContainer) {\n                replaceEl(rootEl, this.inPlaceOf);\n                applyElAttrs(rootEl, undefined, this.elAttrs);\n                this.reportEl(rootEl);\n            }\n            else {\n                const elAttrsChange = changes['elAttrs'];\n                if (elAttrsChange) {\n                    applyElAttrs(rootEl, elAttrsChange.previousValue, elAttrsChange.currentValue);\n                }\n            }\n        }\n    }\n    // invoked BEFORE component removed from DOM\n    ngOnDestroy() {\n        if (\n        // protect against Preact recreating and rerooting inPlaceOf element\n        this.inPlaceOf.parentNode === dummyContainer &&\n            dummyContainer) {\n            dummyContainer.removeChild(this.inPlaceOf);\n        }\n        this.reportEl(null);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: TransportContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.7\", type: TransportContainerComponent, isStandalone: false, selector: \"transport-container\", inputs: { inPlaceOf: \"inPlaceOf\", reportEl: \"reportEl\", elTag: \"elTag\", elClasses: \"elClasses\", elStyle: \"elStyle\", elAttrs: \"elAttrs\", template: \"template\", renderProps: \"renderProps\" }, viewQueries: [{ propertyName: \"rootElRef\", first: true, predicate: [\"rootEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<ng-template [ngIf]=\\\"elTag == 'div'\\\">\\n  <div #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </div>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'span'\\\">\\n  <span #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </span>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'a'\\\">\\n  <a #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </a>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'tr'\\\">\\n  <tr #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </tr>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'th'\\\">\\n  <th #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </th>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'td'\\\">\\n  <td #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </td>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: TransportContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'transport-container', standalone: false, encapsulation: ViewEncapsulation.None, template: \"<ng-template [ngIf]=\\\"elTag == 'div'\\\">\\n  <div #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </div>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'span'\\\">\\n  <span #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </span>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'a'\\\">\\n  <a #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </a>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'tr'\\\">\\n  <tr #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </tr>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'th'\\\">\\n  <th #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </th>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'td'\\\">\\n  <td #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </td>\\n</ng-template>\\n\" }]\n        }], propDecorators: { inPlaceOf: [{\n                type: Input\n            }], reportEl: [{\n                type: Input\n            }], elTag: [{\n                type: Input\n            }], elClasses: [{\n                type: Input\n            }], elStyle: [{\n                type: Input\n            }], elAttrs: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], renderProps: [{\n                type: Input\n            }], rootElRef: [{\n                type: ViewChild,\n                args: ['rootEl']\n            }] } });\nfunction replaceEl(subject, inPlaceOf) {\n    inPlaceOf.parentNode?.insertBefore(subject, inPlaceOf.nextSibling);\n    if (dummyContainer) {\n        dummyContainer.appendChild(inPlaceOf);\n    }\n}\nfunction applyElAttrs(el, previousAttrs = {}, currentAttrs = {}) {\n    // these are called \"attributes\" but they manipulate DOM node *properties*\n    for (const attrName in previousAttrs) {\n        if (!(attrName in currentAttrs)) {\n            el[attrName] = null;\n        }\n    }\n    for (const attrName in currentAttrs) {\n        el[attrName] = currentAttrs[attrName];\n    }\n}","originalLength":8220,"removedExports":[],"renderedExports":["TransportContainerComponent"],"renderedLength":7999},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/full-calendar.component.js":{"code":"class FullCalendarComponent {\n    element;\n    options;\n    deepChangeDetection;\n    /*\n    Options as individual Inputs\n    NOTE: keep in sync with OPTION_INPUT_NAMES\n    */\n    events;\n    eventSources;\n    resources;\n    /*\n    Templates\n    */\n    dayHeaderContent;\n    dayCellContent;\n    weekNumberContent;\n    nowIndicatorContent;\n    eventContent;\n    slotLaneContent;\n    slotLabelContent;\n    allDayContent;\n    moreLinkContent;\n    noEventsContent;\n    resourceAreaHeaderContent;\n    resourceGroupLabelContent;\n    resourceLabelContent;\n    resourceLaneContent;\n    resourceGroupLaneContent;\n    calendar = null;\n    optionSnapshot = {}; // for diffing\n    handleCustomRendering;\n    customRenderingMap = new Map();\n    customRenderingArray;\n    constructor(element, changeDetector) {\n        this.element = element;\n        const customRenderingStore = new CustomRenderingStore();\n        customRenderingStore.subscribe((customRenderingMap) => {\n            this.customRenderingMap = customRenderingMap;\n            this.customRenderingArray = undefined; // clear cache\n            changeDetector.detectChanges();\n        });\n        this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);\n    }\n    ngAfterViewInit() {\n        const { deepChangeDetection } = this;\n        const options = {\n            ...this.options,\n            ...this.buildInputOptions(),\n        };\n        // initialize snapshot\n        this.optionSnapshot = mapHash(options, (optionVal, optionName) => ((deepChangeDetection && OPTION_IS_DEEP[optionName])\n            ? deepCopy(optionVal)\n            : optionVal));\n        const calendarEl = this.element.nativeElement;\n        const calendar = this.calendar = new Calendar(calendarEl, {\n            ...options,\n            ...this.buildExtraOptions(),\n        });\n        // Ionic dimensions hack\n        // https://github.com/fullcalendar/fullcalendar/issues/4976\n        const ionContent = calendarEl.closest('ion-content');\n        if (ionContent && ionContent.componentOnReady) {\n            ionContent.componentOnReady().then(() => {\n                window.requestAnimationFrame(() => {\n                    calendar.render();\n                });\n            });\n        }\n        else {\n            calendar.render();\n        }\n        // Angular v19, whether because of new Vite dev environment or not,\n        // loads outer elements' styles late, so dimensions might not be final here.\n        // Force a size-update after a delay.\n        setTimeout(() => calendar.updateSize());\n    }\n    /*\n    allows us to manually detect complex input changes, internal mutations to certain options.\n    called before ngOnChanges. called much more often than ngOnChanges.\n    */\n    ngDoCheck() {\n        if (this.calendar) { // not the initial render\n            const { deepChangeDetection, optionSnapshot } = this;\n            const newOptions = {\n                ...this.options,\n                ...this.buildInputOptions(),\n            };\n            const newProcessedOptions = {};\n            const changedOptionNames = [];\n            // detect adds and updates (and update snapshot)\n            for (const optionName in newOptions) {\n                if (newOptions.hasOwnProperty(optionName)) {\n                    let optionVal = newOptions[optionName];\n                    if (deepChangeDetection && OPTION_IS_DEEP[optionName]) {\n                        if (!deepEqual(optionSnapshot[optionName], optionVal)) {\n                            optionSnapshot[optionName] = deepCopy(optionVal);\n                            changedOptionNames.push(optionName);\n                        }\n                    }\n                    else {\n                        if (optionSnapshot[optionName] !== optionVal) {\n                            optionSnapshot[optionName] = optionVal;\n                            changedOptionNames.push(optionName);\n                        }\n                    }\n                    newProcessedOptions[optionName] = optionVal;\n                }\n            }\n            const oldOptionNames = Object.keys(optionSnapshot);\n            // detect removals (and update snapshot)\n            for (const optionName of oldOptionNames) {\n                if (!(optionName in newOptions)) { // doesn't exist in new options?\n                    delete optionSnapshot[optionName];\n                    changedOptionNames.push(optionName);\n                }\n            }\n            if (changedOptionNames.length) {\n                this.calendar.pauseRendering();\n                this.calendar.resetOptions({\n                    ...newProcessedOptions,\n                    ...this.buildExtraOptions(),\n                }, changedOptionNames);\n            }\n        }\n    }\n    ngAfterContentChecked() {\n        if (this.calendar) { // too defensive?\n            this.calendar.resumeRendering();\n        }\n    }\n    ngOnDestroy() {\n        if (this.calendar) { // too defensive?\n            this.calendar.destroy();\n            this.calendar = null;\n        }\n    }\n    get customRenderings() {\n        return this.customRenderingArray ||\n            (this.customRenderingArray = [...this.customRenderingMap.values()]);\n    }\n    getApi() {\n        return this.calendar;\n    }\n    buildInputOptions() {\n        const options = {};\n        for (const inputName of OPTION_INPUT_NAMES) {\n            const inputValue = this[inputName];\n            if (inputValue != null) { // exclude both null and undefined\n                options[inputName] = inputValue;\n            }\n        }\n        return options;\n    }\n    buildExtraOptions() {\n        return {\n            handleCustomRendering: this.handleCustomRendering,\n            customRenderingMetaMap: this,\n            customRenderingReplaces: true,\n        };\n    }\n    // for `trackBy` in loop\n    trackCustomRendering(index, customRendering) {\n        return customRendering.id;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.7\", type: FullCalendarComponent, isStandalone: false, selector: \"full-calendar\", inputs: { options: \"options\", deepChangeDetection: \"deepChangeDetection\", events: \"events\", eventSources: \"eventSources\", resources: \"resources\" }, queries: [{ propertyName: \"dayHeaderContent\", first: true, predicate: [\"dayHeaderContent\"], descendants: true, static: true }, { propertyName: \"dayCellContent\", first: true, predicate: [\"dayCellContent\"], descendants: true, static: true }, { propertyName: \"weekNumberContent\", first: true, predicate: [\"weekNumberContent\"], descendants: true, static: true }, { propertyName: \"nowIndicatorContent\", first: true, predicate: [\"nowIndicatorContent\"], descendants: true, static: true }, { propertyName: \"eventContent\", first: true, predicate: [\"eventContent\"], descendants: true, static: true }, { propertyName: \"slotLaneContent\", first: true, predicate: [\"slotLaneContent\"], descendants: true, static: true }, { propertyName: \"slotLabelContent\", first: true, predicate: [\"slotLabelContent\"], descendants: true, static: true }, { propertyName: \"allDayContent\", first: true, predicate: [\"allDayContent\"], descendants: true, static: true }, { propertyName: \"moreLinkContent\", first: true, predicate: [\"moreLinkContent\"], descendants: true, static: true }, { propertyName: \"noEventsContent\", first: true, predicate: [\"noEventsContent\"], descendants: true, static: true }, { propertyName: \"resourceAreaHeaderContent\", first: true, predicate: [\"resourceAreaHeaderContent\"], descendants: true, static: true }, { propertyName: \"resourceGroupLabelContent\", first: true, predicate: [\"resourceGroupLabelContent\"], descendants: true, static: true }, { propertyName: \"resourceLabelContent\", first: true, predicate: [\"resourceLabelContent\"], descendants: true, static: true }, { propertyName: \"resourceLaneContent\", first: true, predicate: [\"resourceLaneContent\"], descendants: true, static: true }, { propertyName: \"resourceGroupLaneContent\", first: true, predicate: [\"resourceGroupLaneContent\"], descendants: true, static: true }], ngImport: i0, template: \"<offscreen-fragment>\\n  <transport-container *ngFor=\\\"let customRendering of customRenderings; trackBy:trackCustomRendering\\\"\\n    [inPlaceOf]=\\\"customRendering.containerEl\\\"\\n    [reportEl]=\\\"customRendering.reportNewContainerEl\\\"\\n    [elTag]=\\\"customRendering.elTag\\\"\\n    [elClasses]=\\\"customRendering.elClasses\\\"\\n    [elStyle]=\\\"customRendering.elStyle\\\"\\n    [elAttrs]=\\\"customRendering.elAttrs\\\"\\n    [template]=\\\"customRendering.generatorMeta\\\"\\n    [renderProps]=\\\"customRendering.renderProps\\\"\\n  ></transport-container>\\n</offscreen-fragment>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: OffscreenFragmentComponent, selector: \"offscreen-fragment\" }, { kind: \"component\", type: TransportContainerComponent, selector: \"transport-container\", inputs: [\"inPlaceOf\", \"reportEl\", \"elTag\", \"elClasses\", \"elStyle\", \"elAttrs\", \"template\", \"renderProps\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'full-calendar', standalone: false, encapsulation: ViewEncapsulation.None // the styles are root-level, not scoped within the component\n                    , template: \"<offscreen-fragment>\\n  <transport-container *ngFor=\\\"let customRendering of customRenderings; trackBy:trackCustomRendering\\\"\\n    [inPlaceOf]=\\\"customRendering.containerEl\\\"\\n    [reportEl]=\\\"customRendering.reportNewContainerEl\\\"\\n    [elTag]=\\\"customRendering.elTag\\\"\\n    [elClasses]=\\\"customRendering.elClasses\\\"\\n    [elStyle]=\\\"customRendering.elStyle\\\"\\n    [elAttrs]=\\\"customRendering.elAttrs\\\"\\n    [template]=\\\"customRendering.generatorMeta\\\"\\n    [renderProps]=\\\"customRendering.renderProps\\\"\\n  ></transport-container>\\n</offscreen-fragment>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }], propDecorators: { options: [{\n                type: Input\n            }], deepChangeDetection: [{\n                type: Input\n            }], events: [{\n                type: Input\n            }], eventSources: [{\n                type: Input\n            }], resources: [{\n                type: Input\n            }], dayHeaderContent: [{\n                type: ContentChild,\n                args: ['dayHeaderContent', { static: true }]\n            }], dayCellContent: [{\n                type: ContentChild,\n                args: ['dayCellContent', { static: true }]\n            }], weekNumberContent: [{\n                type: ContentChild,\n                args: ['weekNumberContent', { static: true }]\n            }], nowIndicatorContent: [{\n                type: ContentChild,\n                args: ['nowIndicatorContent', { static: true }]\n            }], eventContent: [{\n                type: ContentChild,\n                args: ['eventContent', { static: true }]\n            }], slotLaneContent: [{\n                type: ContentChild,\n                args: ['slotLaneContent', { static: true }]\n            }], slotLabelContent: [{\n                type: ContentChild,\n                args: ['slotLabelContent', { static: true }]\n            }], allDayContent: [{\n                type: ContentChild,\n                args: ['allDayContent', { static: true }]\n            }], moreLinkContent: [{\n                type: ContentChild,\n                args: ['moreLinkContent', { static: true }]\n            }], noEventsContent: [{\n                type: ContentChild,\n                args: ['noEventsContent', { static: true }]\n            }], resourceAreaHeaderContent: [{\n                type: ContentChild,\n                args: ['resourceAreaHeaderContent', { static: true }]\n            }], resourceGroupLabelContent: [{\n                type: ContentChild,\n                args: ['resourceGroupLabelContent', { static: true }]\n            }], resourceLabelContent: [{\n                type: ContentChild,\n                args: ['resourceLabelContent', { static: true }]\n            }], resourceLaneContent: [{\n                type: ContentChild,\n                args: ['resourceLaneContent', { static: true }]\n            }], resourceGroupLaneContent: [{\n                type: ContentChild,\n                args: ['resourceGroupLaneContent', { static: true }]\n            }] } });","originalLength":13358,"removedExports":[],"renderedExports":["FullCalendarComponent"],"renderedLength":12731},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/full-calendar.module.js":{"code":"class FullCalendarModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, declarations: [FullCalendarComponent,\n            OffscreenFragmentComponent,\n            TransportContainerComponent], imports: [CommonModule], exports: [FullCalendarComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FullCalendarComponent,\n                        OffscreenFragmentComponent,\n                        TransportContainerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        FullCalendarComponent\n                    ]\n                }]\n        }] });","originalLength":1686,"removedExports":[],"renderedExports":["FullCalendarModule"],"renderedLength":1268},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/public-api.js":{"code":"/*\n * Public API Surface of lib\n */","originalLength":157,"removedExports":[],"renderedExports":[],"renderedLength":35},"/Users/benjaminwhipple/Documents/State-Projects/fullcalendar-angular/dist/lib/tmp-esm2022/fullcalendar-angular.js":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":126,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { ViewEncapsulation, Component, ViewChild, Input, ContentChild, NgModule } from '@angular/core';\nimport { Calendar } from '@fullcalendar/core';\nimport { CustomRenderingStore } from '@fullcalendar/core/internal';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst OPTION_IS_DEEP = {\n    headerToolbar: true,\n    footerToolbar: true,\n    events: true,\n    eventSources: true,\n    resources: true\n};\n/*\nNOTE: keep synced with component\n*/\nconst OPTION_INPUT_NAMES = [\n    'events',\n    'eventSources',\n    'resources',\n];\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/*\nReally simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.\nWanted to use a third-party lib, but none did exactly this.\n*/\nfunction deepCopy(input) {\n    if (Array.isArray(input)) {\n        return input.map(deepCopy);\n    }\n    else if (input instanceof Date) {\n        return new Date(input.valueOf());\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        return mapHash(input, deepCopy);\n    }\n    else { // everything else (null, function, etc)\n        return input;\n    }\n}\nfunction mapHash(input, func) {\n    const output = {};\n    for (const key in input) {\n        if (hasOwnProperty.call(input, key)) {\n            output[key] = func(input[key], key);\n        }\n    }\n    return output;\n}\n\n/*\nForked from https://github.com/epoberezkin/fast-deep-equal (also has MIT license)\nNeeded ESM support or else Angular complains about treeshaking\n(https://github.com/fullcalendar/fullcalendar-angular/issues/421)\n*/\nfunction deepEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n        if (a.constructor !== b.constructor)\n            return false;\n        var length, i, keys;\n        if (Array.isArray(a)) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!deepEqual(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (a.constructor === RegExp)\n            return a.source === b.source && a.flags === b.flags;\n        if (a.valueOf !== Object.prototype.valueOf)\n            return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString)\n            return a.toString() === b.toString();\n        keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            var key = keys[i];\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    // true if both NaN, false otherwise\n    return a !== a && b !== b;\n}\n\nconst dummyContainer$1 = typeof document !== 'undefined' ? document.createDocumentFragment() : null;\nclass OffscreenFragmentComponent {\n    element;\n    constructor(element) {\n        this.element = element;\n    }\n    ngAfterViewInit() {\n        if (dummyContainer$1) {\n            dummyContainer$1.appendChild(this.element.nativeElement);\n        }\n    }\n    // invoked BEFORE component removed from DOM\n    ngOnDestroy() {\n        if (dummyContainer$1) {\n            dummyContainer$1.removeChild(this.element.nativeElement);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: OffscreenFragmentComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.7\", type: OffscreenFragmentComponent, isStandalone: false, selector: \"offscreen-fragment\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: OffscreenFragmentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'offscreen-fragment',\n                    standalone: false,\n                    template: '<ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n\nconst dummyContainer = typeof document !== 'undefined' ? document.createDocumentFragment() : null;\nclass TransportContainerComponent {\n    inPlaceOf; // required\n    reportEl; // required\n    elTag; // required\n    elClasses;\n    elStyle;\n    elAttrs;\n    template; // required\n    renderProps;\n    rootElRef;\n    ngAfterViewInit() {\n        const rootEl = this.rootElRef?.nativeElement; // assumed defined\n        replaceEl(rootEl, this.inPlaceOf);\n        applyElAttrs(rootEl, undefined, this.elAttrs);\n        // insurance for if Preact recreates and reroots inPlaceOf element\n        this.inPlaceOf.style.display = 'none';\n        this.reportEl(rootEl);\n    }\n    ngOnChanges(changes) {\n        const rootEl = this.rootElRef?.nativeElement;\n        // ngOnChanges is called before ngAfterViewInit (and before DOM initializes)\n        // so make sure rootEl is defined before doing anything\n        if (rootEl) {\n            // If the ContentContainer's tagName changed, it will create a new DOM element in its\n            // original place. Detect this and re-replace.\n            if (this.inPlaceOf.parentNode !== dummyContainer) {\n                replaceEl(rootEl, this.inPlaceOf);\n                applyElAttrs(rootEl, undefined, this.elAttrs);\n                this.reportEl(rootEl);\n            }\n            else {\n                const elAttrsChange = changes['elAttrs'];\n                if (elAttrsChange) {\n                    applyElAttrs(rootEl, elAttrsChange.previousValue, elAttrsChange.currentValue);\n                }\n            }\n        }\n    }\n    // invoked BEFORE component removed from DOM\n    ngOnDestroy() {\n        if (\n        // protect against Preact recreating and rerooting inPlaceOf element\n        this.inPlaceOf.parentNode === dummyContainer &&\n            dummyContainer) {\n            dummyContainer.removeChild(this.inPlaceOf);\n        }\n        this.reportEl(null);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: TransportContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.7\", type: TransportContainerComponent, isStandalone: false, selector: \"transport-container\", inputs: { inPlaceOf: \"inPlaceOf\", reportEl: \"reportEl\", elTag: \"elTag\", elClasses: \"elClasses\", elStyle: \"elStyle\", elAttrs: \"elAttrs\", template: \"template\", renderProps: \"renderProps\" }, viewQueries: [{ propertyName: \"rootElRef\", first: true, predicate: [\"rootEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<ng-template [ngIf]=\\\"elTag == 'div'\\\">\\n  <div #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </div>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'span'\\\">\\n  <span #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </span>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'a'\\\">\\n  <a #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </a>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'tr'\\\">\\n  <tr #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </tr>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'th'\\\">\\n  <th #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </th>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'td'\\\">\\n  <td #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </td>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: TransportContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'transport-container', standalone: false, encapsulation: ViewEncapsulation.None, template: \"<ng-template [ngIf]=\\\"elTag == 'div'\\\">\\n  <div #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </div>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'span'\\\">\\n  <span #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </span>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'a'\\\">\\n  <a #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </a>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'tr'\\\">\\n  <tr #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </tr>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'th'\\\">\\n  <th #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </th>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'td'\\\">\\n  <td #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </td>\\n</ng-template>\\n\" }]\n        }], propDecorators: { inPlaceOf: [{\n                type: Input\n            }], reportEl: [{\n                type: Input\n            }], elTag: [{\n                type: Input\n            }], elClasses: [{\n                type: Input\n            }], elStyle: [{\n                type: Input\n            }], elAttrs: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], renderProps: [{\n                type: Input\n            }], rootElRef: [{\n                type: ViewChild,\n                args: ['rootEl']\n            }] } });\nfunction replaceEl(subject, inPlaceOf) {\n    inPlaceOf.parentNode?.insertBefore(subject, inPlaceOf.nextSibling);\n    if (dummyContainer) {\n        dummyContainer.appendChild(inPlaceOf);\n    }\n}\nfunction applyElAttrs(el, previousAttrs = {}, currentAttrs = {}) {\n    // these are called \"attributes\" but they manipulate DOM node *properties*\n    for (const attrName in previousAttrs) {\n        if (!(attrName in currentAttrs)) {\n            el[attrName] = null;\n        }\n    }\n    for (const attrName in currentAttrs) {\n        el[attrName] = currentAttrs[attrName];\n    }\n}\n\nclass FullCalendarComponent {\n    element;\n    options;\n    deepChangeDetection;\n    /*\n    Options as individual Inputs\n    NOTE: keep in sync with OPTION_INPUT_NAMES\n    */\n    events;\n    eventSources;\n    resources;\n    /*\n    Templates\n    */\n    dayHeaderContent;\n    dayCellContent;\n    weekNumberContent;\n    nowIndicatorContent;\n    eventContent;\n    slotLaneContent;\n    slotLabelContent;\n    allDayContent;\n    moreLinkContent;\n    noEventsContent;\n    resourceAreaHeaderContent;\n    resourceGroupLabelContent;\n    resourceLabelContent;\n    resourceLaneContent;\n    resourceGroupLaneContent;\n    calendar = null;\n    optionSnapshot = {}; // for diffing\n    handleCustomRendering;\n    customRenderingMap = new Map();\n    customRenderingArray;\n    constructor(element, changeDetector) {\n        this.element = element;\n        const customRenderingStore = new CustomRenderingStore();\n        customRenderingStore.subscribe((customRenderingMap) => {\n            this.customRenderingMap = customRenderingMap;\n            this.customRenderingArray = undefined; // clear cache\n            changeDetector.detectChanges();\n        });\n        this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);\n    }\n    ngAfterViewInit() {\n        const { deepChangeDetection } = this;\n        const options = {\n            ...this.options,\n            ...this.buildInputOptions(),\n        };\n        // initialize snapshot\n        this.optionSnapshot = mapHash(options, (optionVal, optionName) => ((deepChangeDetection && OPTION_IS_DEEP[optionName])\n            ? deepCopy(optionVal)\n            : optionVal));\n        const calendarEl = this.element.nativeElement;\n        const calendar = this.calendar = new Calendar(calendarEl, {\n            ...options,\n            ...this.buildExtraOptions(),\n        });\n        // Ionic dimensions hack\n        // https://github.com/fullcalendar/fullcalendar/issues/4976\n        const ionContent = calendarEl.closest('ion-content');\n        if (ionContent && ionContent.componentOnReady) {\n            ionContent.componentOnReady().then(() => {\n                window.requestAnimationFrame(() => {\n                    calendar.render();\n                });\n            });\n        }\n        else {\n            calendar.render();\n        }\n        // Angular v19, whether because of new Vite dev environment or not,\n        // loads outer elements' styles late, so dimensions might not be final here.\n        // Force a size-update after a delay.\n        setTimeout(() => calendar.updateSize());\n    }\n    /*\n    allows us to manually detect complex input changes, internal mutations to certain options.\n    called before ngOnChanges. called much more often than ngOnChanges.\n    */\n    ngDoCheck() {\n        if (this.calendar) { // not the initial render\n            const { deepChangeDetection, optionSnapshot } = this;\n            const newOptions = {\n                ...this.options,\n                ...this.buildInputOptions(),\n            };\n            const newProcessedOptions = {};\n            const changedOptionNames = [];\n            // detect adds and updates (and update snapshot)\n            for (const optionName in newOptions) {\n                if (newOptions.hasOwnProperty(optionName)) {\n                    let optionVal = newOptions[optionName];\n                    if (deepChangeDetection && OPTION_IS_DEEP[optionName]) {\n                        if (!deepEqual(optionSnapshot[optionName], optionVal)) {\n                            optionSnapshot[optionName] = deepCopy(optionVal);\n                            changedOptionNames.push(optionName);\n                        }\n                    }\n                    else {\n                        if (optionSnapshot[optionName] !== optionVal) {\n                            optionSnapshot[optionName] = optionVal;\n                            changedOptionNames.push(optionName);\n                        }\n                    }\n                    newProcessedOptions[optionName] = optionVal;\n                }\n            }\n            const oldOptionNames = Object.keys(optionSnapshot);\n            // detect removals (and update snapshot)\n            for (const optionName of oldOptionNames) {\n                if (!(optionName in newOptions)) { // doesn't exist in new options?\n                    delete optionSnapshot[optionName];\n                    changedOptionNames.push(optionName);\n                }\n            }\n            if (changedOptionNames.length) {\n                this.calendar.pauseRendering();\n                this.calendar.resetOptions({\n                    ...newProcessedOptions,\n                    ...this.buildExtraOptions(),\n                }, changedOptionNames);\n            }\n        }\n    }\n    ngAfterContentChecked() {\n        if (this.calendar) { // too defensive?\n            this.calendar.resumeRendering();\n        }\n    }\n    ngOnDestroy() {\n        if (this.calendar) { // too defensive?\n            this.calendar.destroy();\n            this.calendar = null;\n        }\n    }\n    get customRenderings() {\n        return this.customRenderingArray ||\n            (this.customRenderingArray = [...this.customRenderingMap.values()]);\n    }\n    getApi() {\n        return this.calendar;\n    }\n    buildInputOptions() {\n        const options = {};\n        for (const inputName of OPTION_INPUT_NAMES) {\n            const inputValue = this[inputName];\n            if (inputValue != null) { // exclude both null and undefined\n                options[inputName] = inputValue;\n            }\n        }\n        return options;\n    }\n    buildExtraOptions() {\n        return {\n            handleCustomRendering: this.handleCustomRendering,\n            customRenderingMetaMap: this,\n            customRenderingReplaces: true,\n        };\n    }\n    // for `trackBy` in loop\n    trackCustomRendering(index, customRendering) {\n        return customRendering.id;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.7\", type: FullCalendarComponent, isStandalone: false, selector: \"full-calendar\", inputs: { options: \"options\", deepChangeDetection: \"deepChangeDetection\", events: \"events\", eventSources: \"eventSources\", resources: \"resources\" }, queries: [{ propertyName: \"dayHeaderContent\", first: true, predicate: [\"dayHeaderContent\"], descendants: true, static: true }, { propertyName: \"dayCellContent\", first: true, predicate: [\"dayCellContent\"], descendants: true, static: true }, { propertyName: \"weekNumberContent\", first: true, predicate: [\"weekNumberContent\"], descendants: true, static: true }, { propertyName: \"nowIndicatorContent\", first: true, predicate: [\"nowIndicatorContent\"], descendants: true, static: true }, { propertyName: \"eventContent\", first: true, predicate: [\"eventContent\"], descendants: true, static: true }, { propertyName: \"slotLaneContent\", first: true, predicate: [\"slotLaneContent\"], descendants: true, static: true }, { propertyName: \"slotLabelContent\", first: true, predicate: [\"slotLabelContent\"], descendants: true, static: true }, { propertyName: \"allDayContent\", first: true, predicate: [\"allDayContent\"], descendants: true, static: true }, { propertyName: \"moreLinkContent\", first: true, predicate: [\"moreLinkContent\"], descendants: true, static: true }, { propertyName: \"noEventsContent\", first: true, predicate: [\"noEventsContent\"], descendants: true, static: true }, { propertyName: \"resourceAreaHeaderContent\", first: true, predicate: [\"resourceAreaHeaderContent\"], descendants: true, static: true }, { propertyName: \"resourceGroupLabelContent\", first: true, predicate: [\"resourceGroupLabelContent\"], descendants: true, static: true }, { propertyName: \"resourceLabelContent\", first: true, predicate: [\"resourceLabelContent\"], descendants: true, static: true }, { propertyName: \"resourceLaneContent\", first: true, predicate: [\"resourceLaneContent\"], descendants: true, static: true }, { propertyName: \"resourceGroupLaneContent\", first: true, predicate: [\"resourceGroupLaneContent\"], descendants: true, static: true }], ngImport: i0, template: \"<offscreen-fragment>\\n  <transport-container *ngFor=\\\"let customRendering of customRenderings; trackBy:trackCustomRendering\\\"\\n    [inPlaceOf]=\\\"customRendering.containerEl\\\"\\n    [reportEl]=\\\"customRendering.reportNewContainerEl\\\"\\n    [elTag]=\\\"customRendering.elTag\\\"\\n    [elClasses]=\\\"customRendering.elClasses\\\"\\n    [elStyle]=\\\"customRendering.elStyle\\\"\\n    [elAttrs]=\\\"customRendering.elAttrs\\\"\\n    [template]=\\\"customRendering.generatorMeta\\\"\\n    [renderProps]=\\\"customRendering.renderProps\\\"\\n  ></transport-container>\\n</offscreen-fragment>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: OffscreenFragmentComponent, selector: \"offscreen-fragment\" }, { kind: \"component\", type: TransportContainerComponent, selector: \"transport-container\", inputs: [\"inPlaceOf\", \"reportEl\", \"elTag\", \"elClasses\", \"elStyle\", \"elAttrs\", \"template\", \"renderProps\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'full-calendar', standalone: false, encapsulation: ViewEncapsulation.None // the styles are root-level, not scoped within the component\n                    , template: \"<offscreen-fragment>\\n  <transport-container *ngFor=\\\"let customRendering of customRenderings; trackBy:trackCustomRendering\\\"\\n    [inPlaceOf]=\\\"customRendering.containerEl\\\"\\n    [reportEl]=\\\"customRendering.reportNewContainerEl\\\"\\n    [elTag]=\\\"customRendering.elTag\\\"\\n    [elClasses]=\\\"customRendering.elClasses\\\"\\n    [elStyle]=\\\"customRendering.elStyle\\\"\\n    [elAttrs]=\\\"customRendering.elAttrs\\\"\\n    [template]=\\\"customRendering.generatorMeta\\\"\\n    [renderProps]=\\\"customRendering.renderProps\\\"\\n  ></transport-container>\\n</offscreen-fragment>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }], propDecorators: { options: [{\n                type: Input\n            }], deepChangeDetection: [{\n                type: Input\n            }], events: [{\n                type: Input\n            }], eventSources: [{\n                type: Input\n            }], resources: [{\n                type: Input\n            }], dayHeaderContent: [{\n                type: ContentChild,\n                args: ['dayHeaderContent', { static: true }]\n            }], dayCellContent: [{\n                type: ContentChild,\n                args: ['dayCellContent', { static: true }]\n            }], weekNumberContent: [{\n                type: ContentChild,\n                args: ['weekNumberContent', { static: true }]\n            }], nowIndicatorContent: [{\n                type: ContentChild,\n                args: ['nowIndicatorContent', { static: true }]\n            }], eventContent: [{\n                type: ContentChild,\n                args: ['eventContent', { static: true }]\n            }], slotLaneContent: [{\n                type: ContentChild,\n                args: ['slotLaneContent', { static: true }]\n            }], slotLabelContent: [{\n                type: ContentChild,\n                args: ['slotLabelContent', { static: true }]\n            }], allDayContent: [{\n                type: ContentChild,\n                args: ['allDayContent', { static: true }]\n            }], moreLinkContent: [{\n                type: ContentChild,\n                args: ['moreLinkContent', { static: true }]\n            }], noEventsContent: [{\n                type: ContentChild,\n                args: ['noEventsContent', { static: true }]\n            }], resourceAreaHeaderContent: [{\n                type: ContentChild,\n                args: ['resourceAreaHeaderContent', { static: true }]\n            }], resourceGroupLabelContent: [{\n                type: ContentChild,\n                args: ['resourceGroupLabelContent', { static: true }]\n            }], resourceLabelContent: [{\n                type: ContentChild,\n                args: ['resourceLabelContent', { static: true }]\n            }], resourceLaneContent: [{\n                type: ContentChild,\n                args: ['resourceLaneContent', { static: true }]\n            }], resourceGroupLaneContent: [{\n                type: ContentChild,\n                args: ['resourceGroupLaneContent', { static: true }]\n            }] } });\n\nclass FullCalendarModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, declarations: [FullCalendarComponent,\n            OffscreenFragmentComponent,\n            TransportContainerComponent], imports: [CommonModule], exports: [FullCalendarComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.7\", ngImport: i0, type: FullCalendarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FullCalendarComponent,\n                        OffscreenFragmentComponent,\n                        TransportContainerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        FullCalendarComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FullCalendarComponent, FullCalendarModule };\n//# sourceMappingURL=fullcalendar-angular.mjs.map\n","map":null,"preliminaryFileName":"fullcalendar-angular.mjs","sourcemapFileName":"fullcalendar-angular.mjs.map"},{"fileName":"fullcalendar-angular.mjs.map","names":[],"needsCodeReference":false,"originalFileName":null,"originalFileNames":[],"source":"{\"version\":3,\"file\":\"fullcalendar-angular.mjs\",\"sources\":[\"../../../lib/src/options.ts\",\"../../../lib/src/utils/obj.ts\",\"../../../lib/src/utils/fast-deep-equal.ts\",\"../../../lib/src/utils/offscreen-fragment.component.ts\",\"../../../lib/src/utils/transport-container.component.ts\",\"../../../lib/src/utils/transport-container.component.html\",\"../../../lib/src/full-calendar.component.ts\",\"../../../lib/src/full-calendar.component.html\",\"../../../lib/src/full-calendar.module.ts\",\"../../../lib/src/public-api.ts\",\"../../../lib/src/fullcalendar-angular.ts\"],\"sourcesContent\":[\"\\nexport const OPTION_IS_DEEP: { [optionName: string]: boolean } = {\\n  headerToolbar: true,\\n  footerToolbar: true,\\n  events: true,\\n  eventSources: true,\\n  resources: true\\n};\\n\\n/*\\nNOTE: keep synced with component\\n*/\\nexport const OPTION_INPUT_NAMES: string[] = [\\n  'events',\\n  'eventSources',\\n  'resources',\\n];\\n\",\"\\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n/*\\nReally simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.\\nWanted to use a third-party lib, but none did exactly this.\\n*/\\nexport function deepCopy(input: any): any {\\n\\n  if (Array.isArray(input)) {\\n    return input.map(deepCopy);\\n\\n  } else if (input instanceof Date) {\\n    return new Date(input.valueOf());\\n\\n  } else if (typeof input === 'object' && input) { // non-null object\\n    return mapHash(input, deepCopy);\\n\\n  } else { // everything else (null, function, etc)\\n    return input;\\n  }\\n}\\n\\n\\nexport function mapHash(input: any, func: any): any {\\n  const output: { [key: string]: any } = {};\\n\\n  for (const key in input) {\\n    if (hasOwnProperty.call(input, key)) {\\n      output[key] = func(input[key], key);\\n    }\\n  }\\n\\n  return output;\\n}\\n\",\"/*\\nForked from https://github.com/epoberezkin/fast-deep-equal (also has MIT license)\\nNeeded ESM support or else Angular complains about treeshaking\\n(https://github.com/fullcalendar/fullcalendar-angular/issues/421)\\n*/\\nexport function deepEqual(a: any, b: any): boolean {\\n  if (a === b) return true;\\n\\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\\n    if (a.constructor !== b.constructor) return false;\\n\\n    var length, i, keys;\\n    if (Array.isArray(a)) {\\n      length = a.length;\\n      if (length != b.length) return false;\\n      for (i = length; i-- !== 0;)\\n        if (!deepEqual(a[i], b[i])) return false;\\n      return true;\\n    }\\n\\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\\n\\n    keys = Object.keys(a);\\n    length = keys.length;\\n    if (length !== Object.keys(b).length) return false;\\n\\n    for (i = length; i-- !== 0;)\\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\\n\\n    for (i = length; i-- !== 0;) {\\n      var key = keys[i];\\n\\n      if (!deepEqual(a[key], b[key])) return false;\\n    }\\n\\n    return true;\\n  }\\n\\n  // true if both NaN, false otherwise\\n  return a!==a && b!==b;\\n}\\n\",\"import {\\n  Component,\\n  ViewEncapsulation,\\n  AfterViewInit,\\n  OnDestroy,\\n  ElementRef\\n} from '@angular/core';\\n\\nconst dummyContainer = typeof document !== 'undefined' ? document.createDocumentFragment() : null;\\n\\n@Component({\\n  selector: 'offscreen-fragment',\\n  standalone: false,\\n  template: '<ng-content></ng-content>',\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class OffscreenFragmentComponent implements AfterViewInit, OnDestroy {\\n  constructor(private element: ElementRef) {\\n  }\\n\\n  ngAfterViewInit() {\\n    if (dummyContainer) {\\n      dummyContainer.appendChild(this.element.nativeElement)\\n    }\\n  }\\n\\n  // invoked BEFORE component removed from DOM\\n  ngOnDestroy() {\\n    if (dummyContainer) {\\n      dummyContainer.removeChild(this.element.nativeElement)\\n    }\\n  }\\n}\\n\",\"import {\\n  Component,\\n  Input,\\n  ViewEncapsulation,\\n  ViewChild,\\n  TemplateRef,\\n  ElementRef,\\n  OnChanges,\\n  AfterViewInit,\\n  OnDestroy,\\n  SimpleChanges\\n} from '@angular/core';\\n\\nconst dummyContainer = typeof document !== 'undefined' ? document.createDocumentFragment() : null;\\n\\n@Component({\\n  selector: 'transport-container',\\n  standalone: false,\\n  templateUrl: './transport-container.component.html',\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class TransportContainerComponent implements OnChanges, AfterViewInit, OnDestroy {\\n  @Input() inPlaceOf!: HTMLElement; // required\\n  @Input() reportEl!: (el: HTMLElement | null) => void; // required\\n  @Input() elTag!: string; // required\\n  @Input() elClasses?: string[];\\n  @Input() elStyle?: Record<string, unknown>;\\n  @Input() elAttrs?: Record<string, unknown>;\\n  @Input() template!: TemplateRef<any>; // required\\n  @Input() renderProps?: any;\\n\\n  @ViewChild('rootEl') rootElRef?: ElementRef;\\n\\n  ngAfterViewInit() {\\n    const rootEl: Element = this.rootElRef?.nativeElement; // assumed defined\\n\\n    replaceEl(rootEl, this.inPlaceOf);\\n    applyElAttrs(rootEl, undefined, this.elAttrs);\\n\\n    // insurance for if Preact recreates and reroots inPlaceOf element\\n    this.inPlaceOf.style.display = 'none';\\n\\n    this.reportEl(rootEl as HTMLElement);\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    const rootEl: Element | undefined = this.rootElRef?.nativeElement;\\n\\n    // ngOnChanges is called before ngAfterViewInit (and before DOM initializes)\\n    // so make sure rootEl is defined before doing anything\\n    if (rootEl) {\\n      // If the ContentContainer's tagName changed, it will create a new DOM element in its\\n      // original place. Detect this and re-replace.\\n      if (this.inPlaceOf.parentNode !== dummyContainer) {\\n        replaceEl(rootEl, this.inPlaceOf);\\n        applyElAttrs(rootEl, undefined, this.elAttrs);\\n        this.reportEl(rootEl as HTMLElement);\\n      } else {\\n        const elAttrsChange = changes['elAttrs'];\\n\\n        if (elAttrsChange) {\\n          applyElAttrs(rootEl, elAttrsChange.previousValue, elAttrsChange.currentValue);\\n        }\\n      }\\n    }\\n  }\\n\\n  // invoked BEFORE component removed from DOM\\n  ngOnDestroy() {\\n    if (\\n      // protect against Preact recreating and rerooting inPlaceOf element\\n      this.inPlaceOf.parentNode === dummyContainer &&\\n      dummyContainer\\n    ) {\\n      dummyContainer.removeChild(this.inPlaceOf);\\n    }\\n\\n    this.reportEl(null);\\n  }\\n}\\n\\nfunction replaceEl(subject: Element, inPlaceOf: Element): void {\\n  inPlaceOf.parentNode?.insertBefore(subject, inPlaceOf.nextSibling);\\n\\n  if (dummyContainer) {\\n    dummyContainer.appendChild(inPlaceOf);\\n  }\\n}\\n\\nfunction applyElAttrs(\\n  el: Element,\\n  previousAttrs: Record<string, any> = {},\\n  currentAttrs: Record<string, any> = {}\\n): void {\\n  // these are called \\\"attributes\\\" but they manipulate DOM node *properties*\\n\\n  for (const attrName in previousAttrs) {\\n    if (!(attrName in currentAttrs)) {\\n      (el as any)[attrName] = null;\\n    }\\n  }\\n\\n  for (const attrName in currentAttrs) {\\n    (el as any)[attrName] = currentAttrs[attrName];\\n  }\\n}\\n\",\"<ng-template [ngIf]=\\\"elTag == 'div'\\\">\\n  <div #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </div>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'span'\\\">\\n  <span #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </span>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'a'\\\">\\n  <a #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </a>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'tr'\\\">\\n  <tr #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </tr>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'th'\\\">\\n  <th #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </th>\\n</ng-template>\\n<ng-template [ngIf]=\\\"elTag == 'td'\\\">\\n  <td #rootEl [ngClass]=\\\"elClasses || ''\\\" [ngStyle]=\\\"elStyle || null\\\">\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: renderProps }\\\"\\n    ></ng-container>\\n  </td>\\n</ng-template>\\n\",\"import {\\n  Component,\\n  ContentChild,\\n  TemplateRef,\\n  ElementRef,\\n  Input,\\n  AfterViewInit,\\n  DoCheck,\\n  AfterContentChecked,\\n  OnDestroy,\\n  ViewEncapsulation,\\n  ChangeDetectorRef,\\n} from '@angular/core';\\nimport { Calendar, CalendarOptions } from '@fullcalendar/core';\\nimport { CustomRendering, CustomRenderingStore } from '@fullcalendar/core/internal';\\nimport { OPTION_INPUT_NAMES, OPTION_IS_DEEP } from './options';\\nimport { CalendarOption, CalendarTemplateRef } from './private-types';\\nimport { deepCopy, mapHash } from './utils/obj';\\nimport { deepEqual } from './utils/fast-deep-equal';\\n\\n@Component({\\n  selector: 'full-calendar',\\n  standalone: false,\\n  templateUrl: './full-calendar.component.html',\\n  encapsulation: ViewEncapsulation.None // the styles are root-level, not scoped within the component\\n})\\nexport class FullCalendarComponent implements AfterViewInit, DoCheck, AfterContentChecked, OnDestroy {\\n  @Input() options?: CalendarOptions;\\n  @Input() deepChangeDetection?: boolean;\\n\\n  /*\\n  Options as individual Inputs\\n  NOTE: keep in sync with OPTION_INPUT_NAMES\\n  */\\n  @Input() events?: CalendarOption<'events'> | null | undefined;\\n  @Input() eventSources?: CalendarOption<'eventSources'> | null | undefined;\\n  @Input() resources?: CalendarOption<'resources'> | null | undefined;\\n\\n  /*\\n  Templates\\n  */\\n  @ContentChild('dayHeaderContent', { static: true }) dayHeaderContent?: CalendarTemplateRef<'dayHeaderContent'>;\\n  @ContentChild('dayCellContent', { static: true }) dayCellContent?: CalendarTemplateRef<'dayCellContent'>;\\n  @ContentChild('weekNumberContent', { static: true }) weekNumberContent?: CalendarTemplateRef<'weekNumberContent'>;\\n  @ContentChild('nowIndicatorContent', { static: true }) nowIndicatorContent?: CalendarTemplateRef<'nowIndicatorContent'>;\\n  @ContentChild('eventContent', { static: true }) eventContent?: CalendarTemplateRef<'eventContent'>;\\n  @ContentChild('slotLaneContent', { static: true }) slotLaneContent?: CalendarTemplateRef<'slotLaneContent'>;\\n  @ContentChild('slotLabelContent', { static: true }) slotLabelContent?: CalendarTemplateRef<'slotLabelContent'>;\\n  @ContentChild('allDayContent', { static: true }) allDayContent?: CalendarTemplateRef<'allDayContent'>;\\n  @ContentChild('moreLinkContent', { static: true }) moreLinkContent?: CalendarTemplateRef<'moreLinkContent'>;\\n  @ContentChild('noEventsContent', { static: true }) noEventsContent?: CalendarTemplateRef<'noEventsContent'>;\\n  @ContentChild('resourceAreaHeaderContent', { static: true }) resourceAreaHeaderContent?: CalendarTemplateRef<'resourceAreaHeaderContent'>;\\n  @ContentChild('resourceGroupLabelContent', { static: true }) resourceGroupLabelContent?: CalendarTemplateRef<'resourceGroupLabelContent'>;\\n  @ContentChild('resourceLabelContent', { static: true }) resourceLabelContent?: CalendarTemplateRef<'resourceLabelContent'>;\\n  @ContentChild('resourceLaneContent', { static: true }) resourceLaneContent?: CalendarTemplateRef<'resourceLaneContent'>;\\n  @ContentChild('resourceGroupLaneContent', { static: true }) resourceGroupLaneContent?: CalendarTemplateRef<'resourceGroupLaneContent'>;\\n\\n  private calendar: Calendar | null = null;\\n  private optionSnapshot: Record<string, any> = {}; // for diffing\\n  private handleCustomRendering: (customRendering: CustomRendering<any>) => void\\n  private customRenderingMap = new Map<string, CustomRendering<any>>()\\n  private customRenderingArray?: CustomRendering<any>[]\\n\\n  constructor(\\n    private element: ElementRef,\\n    changeDetector: ChangeDetectorRef\\n  ) {\\n    const customRenderingStore = new CustomRenderingStore();\\n\\n    customRenderingStore.subscribe((customRenderingMap) => {\\n      this.customRenderingMap = customRenderingMap;\\n      this.customRenderingArray = undefined; // clear cache\\n      changeDetector.detectChanges();\\n    });\\n\\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);\\n  }\\n\\n  ngAfterViewInit() {\\n    const { deepChangeDetection } = this;\\n    const options = {\\n      ...this.options,\\n      ...this.buildInputOptions(),\\n    };\\n\\n    // initialize snapshot\\n    this.optionSnapshot = mapHash(options, (optionVal: any, optionName: string) => (\\n      (deepChangeDetection && OPTION_IS_DEEP[optionName])\\n        ? deepCopy(optionVal)\\n        : optionVal\\n    ));\\n\\n    const calendarEl = this.element.nativeElement\\n    const calendar = this.calendar = new Calendar(calendarEl, {\\n      ...options,\\n      ...this.buildExtraOptions(),\\n    });\\n\\n    // Ionic dimensions hack\\n    // https://github.com/fullcalendar/fullcalendar/issues/4976\\n    const ionContent = calendarEl.closest('ion-content')\\n    if (ionContent && ionContent.componentOnReady) {\\n      ionContent.componentOnReady().then(() => {\\n        window.requestAnimationFrame(() => {\\n          calendar.render()\\n        })\\n      })\\n    } else {\\n      calendar.render()\\n    }\\n\\n    // Angular v19, whether because of new Vite dev environment or not,\\n    // loads outer elements' styles late, so dimensions might not be final here.\\n    // Force a size-update after a delay.\\n    setTimeout(() => calendar.updateSize())\\n  }\\n\\n  /*\\n  allows us to manually detect complex input changes, internal mutations to certain options.\\n  called before ngOnChanges. called much more often than ngOnChanges.\\n  */\\n  ngDoCheck() {\\n    if (this.calendar) { // not the initial render\\n      const { deepChangeDetection, optionSnapshot } = this;\\n      const newOptions = {\\n        ...this.options,\\n        ...this.buildInputOptions(),\\n      };\\n      const newProcessedOptions: Record<string, any> = {};\\n      const changedOptionNames: string[] = []\\n\\n      // detect adds and updates (and update snapshot)\\n      for (const optionName in newOptions) {\\n        if (newOptions.hasOwnProperty(optionName)) {\\n          let optionVal = newOptions[optionName as keyof CalendarOptions];\\n\\n          if (deepChangeDetection && OPTION_IS_DEEP[optionName]) {\\n            if (!deepEqual(optionSnapshot[optionName], optionVal)) {\\n              optionSnapshot[optionName] = deepCopy(optionVal);\\n              changedOptionNames.push(optionName);\\n            }\\n          } else {\\n            if (optionSnapshot[optionName] !== optionVal) {\\n              optionSnapshot[optionName] = optionVal;\\n              changedOptionNames.push(optionName);\\n            }\\n          }\\n\\n          newProcessedOptions[optionName] = optionVal;\\n        }\\n      }\\n\\n      const oldOptionNames = Object.keys(optionSnapshot);\\n\\n      // detect removals (and update snapshot)\\n      for (const optionName of oldOptionNames) {\\n        if (!(optionName in newOptions)) { // doesn't exist in new options?\\n          delete optionSnapshot[optionName];\\n          changedOptionNames.push(optionName);\\n        }\\n      }\\n\\n      if (changedOptionNames.length) {\\n        this.calendar.pauseRendering();\\n        this.calendar.resetOptions({\\n          ...newProcessedOptions,\\n          ...this.buildExtraOptions(),\\n        }, changedOptionNames);\\n      }\\n    }\\n  }\\n\\n  ngAfterContentChecked() {\\n    if (this.calendar) { // too defensive?\\n      this.calendar.resumeRendering();\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.calendar) { // too defensive?\\n      this.calendar.destroy();\\n      this.calendar = null;\\n    }\\n  }\\n\\n  get customRenderings(): CustomRendering<any>[] {\\n    return this.customRenderingArray ||\\n      (this.customRenderingArray = [...this.customRenderingMap.values()]);\\n  }\\n\\n  public getApi(): Calendar {\\n    return this.calendar!;\\n  }\\n\\n  private buildInputOptions(): CalendarOptions {\\n    const options: CalendarOptions = {}\\n\\n    for (const inputName of OPTION_INPUT_NAMES) {\\n      const inputValue = (this as any)[inputName];\\n\\n      if (inputValue != null) { // exclude both null and undefined\\n        (options as any)[inputName] = inputValue;\\n      }\\n    }\\n\\n    return options;\\n  }\\n\\n  private buildExtraOptions(): CalendarOptions {\\n    return {\\n      handleCustomRendering: this.handleCustomRendering,\\n      customRenderingMetaMap: this as unknown as { [templateName: string]: TemplateRef<any> },\\n      customRenderingReplaces: true,\\n    };\\n  }\\n\\n  // for `trackBy` in loop\\n  trackCustomRendering(index: number, customRendering: CustomRendering<any>): any {\\n    return customRendering.id\\n  }\\n}\\n\",\"<offscreen-fragment>\\n  <transport-container *ngFor=\\\"let customRendering of customRenderings; trackBy:trackCustomRendering\\\"\\n    [inPlaceOf]=\\\"customRendering.containerEl\\\"\\n    [reportEl]=\\\"customRendering.reportNewContainerEl\\\"\\n    [elTag]=\\\"customRendering.elTag\\\"\\n    [elClasses]=\\\"customRendering.elClasses\\\"\\n    [elStyle]=\\\"customRendering.elStyle\\\"\\n    [elAttrs]=\\\"customRendering.elAttrs\\\"\\n    [template]=\\\"customRendering.generatorMeta\\\"\\n    [renderProps]=\\\"customRendering.renderProps\\\"\\n  ></transport-container>\\n</offscreen-fragment>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common'\\nimport { FullCalendarComponent } from './full-calendar.component';\\nimport { OffscreenFragmentComponent } from './utils/offscreen-fragment.component';\\nimport { TransportContainerComponent } from './utils/transport-container.component';\\n\\n@NgModule({\\n  declarations: [\\n    FullCalendarComponent,\\n    OffscreenFragmentComponent,\\n    TransportContainerComponent\\n  ],\\n  imports: [\\n    CommonModule\\n  ],\\n  exports: [\\n    FullCalendarComponent\\n  ]\\n})\\nexport class FullCalendarModule { }\\n\",\"/*\\n * Public API Surface of lib\\n */\\n\\nexport * from './full-calendar.component';\\nexport * from './full-calendar.module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"dummyContainer\",\"i2.OffscreenFragmentComponent\",\"i3.TransportContainerComponent\"],\"mappings\":\"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\"}","type":"asset"}]}